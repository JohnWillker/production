apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "trackableappname" . }}
  labels:
    app: {{ template "appname" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: {{ template "appname" . }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: APP_NAME
          value: {{ .Values.application.application_name }}
        - name: APP_ENV 
          value: {{ .Values.app_env }}
        - name: LOG_LEVEL 
          value: {{ .Values.log.level }}
        - name: DB_HOST
          value: {{ .Values.db.host }}
        - name: DB_DATABASE
          value: {{ .Values.db.database }}
        - name: DB_USERNAME
          value: {{ .Values.db.username }}
        - name: DB_PASSWORD
          value: {{ .Values.db.password }}
        - name: GRPC_PORT
          value: {{ .Values.grpc.port | quote }}
        - name: HTTP_PORT
          value: {{ .Values.http.port | quote }}
        - name: DISCOUNTS_PORT
          value: {{ .Values.discounts.port | quote }}
        - name: DISCOUNTS_ADDRESS
          value: {{ .Values.discounts.address }}
        {{- if eq .Values.serviceweb.enabled true }}
        ports:
        - name: "{{ .Values.service.name }}"
          containerPort: {{ .Values.service.internalPort }}
        livenessProbe:
          {{- if eq .Values.livenessprobe.typeProbe "httpGet" }}
          httpGet:
            path: {{ .Values.service.probe.healthcheck }}
            port: {{ .Values.service.internalPort }}
          {{- end  }}
          {{- if eq .Values.livenessprobe.typeProbe "tcpSocket" }}
          tcpSocket:
            port: {{ .Values.grpc.port }} 
          initialDelaySeconds: 5
          periodSeconds: 10
          {{- end  }}
          initialDelaySeconds: {{ .Values.livenessprobe.initialDelaySeconds }}
          timeoutSeconds: 10
          failureThreshold: 5
        readinessProbe:
          {{- if eq .Values.livenessprobe.typeProbe "httpGet" }}
          httpGet:
            path: {{ .Values.service.probe.healthcheck }}
            port: {{ .Values.service.internalPort }}
          {{- end  }}
          {{- if eq .Values.livenessprobe.typeProbe "tcpSocket" }}
          tcpSocket:
            port: {{ .Values.grpc.port }} 
          initialDelaySeconds: 5
          periodSeconds: 10
          {{- end  }}
          initialDelaySeconds: {{ .Values.readinessprobe.initialDelaySeconds }}
          timeoutSeconds: 10
          failureThreshold: 5

        resources:
          requests:
            memory: {{ .Values.resources.requests.memory }}
            cpu: {{ .Values.resources.requests.cpu }}
          limits:
            memory: {{ .Values.resources.limits.memory }}
            cpu: {{ .Values.resources.limits.cpu }}
        {{- end }}
